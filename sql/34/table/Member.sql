CREATE TABLE [MEM](
	MEMid INT IDENTITY(1,1) NOT NULL PRIMARY KEY,
	MEMNAME NVARCHAR(20) NOT NULL,
    MEMGD VARCHAR(10),
    MEMPN NVARCHAR(15) NOT NULL,
    MEMIN NVARCHAR(10),
    MEMADR NVARCHAR(200) NOT NULL,
    MEMMAIL NVARCHAR(50) NOT NULL,
    MEMBD DATE,
    MEMDCT DATETIME,
    RANKID INT,
    MEMUPDATEBY INT, -- FK to EMP.EMPID
    MEMUPDATEAT DATETIME,
    GIFTTOUSERID INT,

    FOREIGN KEY (RANKID) REFERENCES MEM_RANK(RANKID),
    FOREIGN KEY (MEMUPDATEBY) REFERENCES EMP(EMPID)
);
SELECT * FROM MEM;



CREATE TABLE DEP (
    DEPID INT NOT NULL PRIMARY KEY,
    DEPNAME NVARCHAR(20) NOT NULL,
    MGRID INT NOT NULL -- FK to EMP.EMPID
);

CREATE TABLE EMP (
    EMPID INT NOT NULL PRIMARY KEY,
    EMPNAME NVARCHAR(20) NOT NULL,
    EMPPN INT NOT NULL,
    EMPMAIL NVARCHAR(50) NOT NULL,
    EMPDCT DATETIME,
    EMPACC NVARCHAR(10), -- Admin/User
    DEPID INT NOT NULL,
    EMPUPDATEBY INT, -- FK to EMP.EMPID
    EMPUPDATEAT DATETIME,
    
    FOREIGN KEY (DEPID) REFERENCES DEP(DEPID),
    FOREIGN KEY (EMPUPDATEBY) REFERENCES EMP(EMPID)
);

CREATE TABLE MEM_RANK (
    RANKID INT NOT NULL PRIMARY KEY,
    RANKNAME NVARCHAR(MAX), -- 長度未明確，先使用 MAX
    ORDID INT -- FK
);

CREATE TABLE MEM_AUDIT (
    AuditID INT NOT NULL PRIMARY KEY,
    MEMID INT NOT NULL, -- FK to MEM.MEMID
    MEMNAME NVARCHAR(20) NOT NULL,
    MEMGD VARCHAR(10),
    MEMPN NVARCHAR(15) NOT NULL,
    MEMIN NVARCHAR(10),
    MEMADR NVARCHAR(200) NOT NULL,
    MEMMAIL NVARCHAR(50) NOT NULL,
    MEMBD DATE,
    MEMDCT DATETIME,
    RANKID INT,
    MEMUPDATEBY INT,
    MEMUPDATEAT DATETIME,
    GIFTTOUSERID INT,
    AuditTime DATETIME,   -- 稽核時間
    AuditAction NVARCHAR(10),    -- 動作類型，如：UPDATE

    FOREIGN KEY (MEMID) REFERENCES MEM(MEMID)
);             
                        

--觸發器

CREATE TRIGGER TR_MEM_AUDIT_LOGGER
ON MEM
AFTER INSERT, UPDATE
AS
BEGIN
    SET NOCOUNT ON;

    INSERT INTO MEM_AUDIT (
        MEMID,
        MEMNAME,
        MEMGD,
        MEMPN,
        MEMIN,
        MEMADR,
        MEMMAIL,
        MEMBD,
        MEMDCT,
        RANKID,
        MEMUPDATEBY,
        MEMUPDATEAT,
        GIFTTOUSERID,
        AuditTime,
        AuditAction
    )
    SELECT
        i.MEMID,
        i.MEMNAME,
        i.MEMGD,
        i.MEMPN,
        i.MEMIN,
        i.MEMADR,
        i.MEMMAIL,
        i.MEMBD,
        i.MEMDCT,
        i.RANKID,
        i.MEMUPDATEBY,
        i.MEMUPDATEAT,
        i.GIFTTOUSERID,
        GETDATE(),
        CASE 
            WHEN EXISTS (
                SELECT 1 FROM DELETED d WHERE d.MEMID = i.MEMID
            ) THEN 'UPDATE'
            ELSE 'INSERT'
        END
    FROM INSERTED i;
END;